function ViewportUnits() {}

function BlockHero() {
  $block = jQuery(".block--hero"), $lettering = jQuery(".lettering", $block)
}

function BlockWork() {
  isExpanded = !1, $block = jQuery(".block--work"), $currentProject = null, that = this
}

function Overlay() {}

function Fullpage() {}

function Chapter() {}

function Main() {}
window.textToHtml = function(e) {
  var t = String(e).replace(/<\!DOCTYPE[^>]*>/i, "").replace(/<(html|head|body|title|meta|script)([\s\>])/gi, '<div class="document-$1"$2').replace(/<\/(html|head|body|title|meta|script)\>/gi, "</div>");
  return t
}, ViewportUnits.prototype = {
  constructor: ViewportUnits,
  init: function() {}
}, BlockHero.prototype = {
  constructor: BlockHero,
  initLettering: function() {
    -1 != navigator.userAgent.indexOf("Safari") && -1 == navigator.userAgent.indexOf("Chrome") ? (jQuery("#welcome", $lettering).fadeOut(), jQuery("#welcome-shadow", $lettering).fadeOut()) : (jQuery("#welcome-underline, #welcome-underline-shadow", $lettering).velocity({
      strokeDashoffset: -275
    }, {
      duration: 700,
      delay: 0,
      easing: "easeInQuad"
    }), jQuery("#welcome-w, #welcome-w-shadow", $lettering).velocity({
      strokeDashoffset: -805
    }, {
      duration: 1400,
      delay: 0,
      easing: "easeInOutQuart"
    }), jQuery("#welcome-e, #welcome-e-shadow", $lettering).velocity({
      strokeDashoffset: -120
    }, {
      duration: 1e3,
      delay: 0,
      easing: "easeInOutQuart"
    }), jQuery("#welcome-lcome, #welcome-lcome-shadow", $lettering).velocity({
      strokeDashoffset: -850
    }, {
      duration: 1e3,
      delay: 400,
      easing: "easeInOutQuart"
    }), jQuery("#connection-1, #connection-1-shadow", $lettering).velocity({
      strokeDashoffset: -272
    }, {
      duration: 600,
      delay: 400,
      easing: "linear"
    }), jQuery("#connection-2, #connection-2-shadow", $lettering).velocity({
      strokeDashoffset: -235
    }, {
      duration: 600,
      delay: 700,
      easing: "linear"
    })), jQuery("#md-mv, #md-mv-shadow", $lettering).velocity({
      strokeDashoffset: -0
    }, {
      duration: 1500,
      delay: 1e3,
      easing: "easeOutSine"
    }), jQuery("#md-e, #md-e-shadow", $lettering).velocity({
      strokeDashoffset: -0
    }, {
      duration: 300,
      delay: 1400,
      easing: "easeInOutQuart"
    }), jQuery("#md-lanie, #md-lanie-shadow", $lettering).velocity({
      strokeDashoffset: -0
    }, {
      duration: 1700,
      delay: 1300,
      easing: "easeOutSine"
    }), jQuery("#md-d, #md-d-shadow", $lettering).velocity({
      strokeDashoffset: -0
    }, {
      duration: 600,
      delay: 1e3,
      easing: "easeInOutQuart"
    }), jQuery("#md-a, #md-a-shadow", $lettering).velocity({
      strokeDashoffset: -0
    }, {
      duration: 300,
      delay: 1400,
      easing: "easeOutSine"
    }), jQuery("#md-eid, md-eid-shadow", $lettering).velocity({
      strokeDashoffset: -0
    }, {
      duration: 1e3,
      delay: 1800,
      easing: "easeOutSine"
    }), jQuery("#md-underline, #md-underline-shadow", $lettering).velocity({
      strokeDashoffset: -0
    }, {
      duration: 800,
      delay: 2200,
      easing: "easeInOutQuart"
    })
  },
  init: function() {
    jQuery(window).on("loaded", this.initLettering)
  }
}, BlockWork.prototype = {
  constructor: BlockWork,
  initPlugins: function() {
    jQuery(".project").MDProject()
  },
  initListener: function() {
    jQuery(document).on("click", "a[data-next-project]", this.onNextProjectTriggerClicked.bind(this)), jQuery("a[data-project]").on("click", this.onProjectTriggerClicked), jQuery("a.chapter__close-button").on("click", this.onChapterCloseClicked.bind(this)), jQuery(".project", $block).on("open", this.onProjectOpen), jQuery(".project", $block).on("loading", this.onProjectLoading), jQuery(".project", $block).on("loaded", this.onProjectLoaded), jQuery(".project", $block).on("close", this.onProjectClose)
  },
  openProject: function(e, t) {
    var o = 0;
    isExpanded && (o = this.closeProject($currentProject, !1)), setTimeout(function() {
      var o = 0;
      Math.floor(jQuery(window).scrollTop()) != Math.floor(e.offset().top) && (o = Math.min(1200, Math.max(600, Math.abs(jQuery(window).scrollTop() - e.offset().top) / jQuery(window).height() * 600)), console.info(o), jQuery("html,body").animate({
        scrollTop: e.offset().top
      }, o, "easeInOutQuart")), setTimeout(function() {
        e.closest("li").siblings().hide(), jQuery(window).scrollTop(jQuery(".chapter__content", $block).offset().top), e.data("MDProject").openProject(t), isExpanded = !0, $currentProject = e
      }, o + 100)
    }, o)
  },
  closeProject: function(e, t) {
    $block.removeClass("chapter--closeable");
    var o = 0;
    return jQuery(window).scrollTop() != e.offset().top && (o = Math.min(1200, Math.max(600, (jQuery(window).scrollTop() - e.offset().top) / jQuery(window).height() * 600)), jQuery("html,body").animate({
      scrollTop: e.offset().top
    }, o, "easeInOutQuart")), setTimeout(function() {
      e.data("MDProject").closeProject()
    }, o), setTimeout(function() {
      e.closest("li").siblings().show(), jQuery(window).scrollTop(e.offset().top), t && (jQuery(".project-nav a", $block).removeClass("selected"), $block.removeClass("chapter--expanded"))
    }, o + 600), isExpanded = !1, $currentProject = null, o + 1e3
  },
  onProjectTriggerClicked: function() {
    jQuery(".project-nav a", $block).removeClass("selected"), jQuery('.project-nav a[data-project="' + jQuery(this).data("project") + '"]', $block).addClass("selected");
    var e = jQuery('.project[data-project="' + jQuery(this).data("project") + '"]'),
      t = jQuery(this).attr("href");
    return e.is($currentProject) || (that.openProject(e, t), Main.trackPage(t)), !1
  },
  onNextProjectTriggerClicked: function() {
    $projects = jQuery(".project", $block);
    var e = $projects.index($currentProject) + 1;
    e == $projects.length && (e = 0);
    var t = $projects.eq(e);
    return jQuery('.project-nav a[data-project="' + t.data("project") + '"]', $block).trigger("click"), !1
  },
  onProjectOpen: function() {},
  onProjectLoading: function() {
    $block.addClass("chapter--loading")
  },
  onProjectLoaded: function(e, t) {
    $block.addClass("chapter--expanded"), $block.removeClass("chapter--loading"), $block.addClass("chapter--closeable");
    var o = t.$project,
      i = Math.max(600, (jQuery(window).scrollTop() - $block.offset().top) / jQuery(window).height() * 800);
    jQuery(window).scrollTop() != $block.offset().top && jQuery("html,body").animate({
      scrollTop: o.offset().top
    }, i, "easeInOutQuart"), setTimeout(function() {
      o.data("MDProject").expand()
    }, i)
  },
  onProjectClose: function() {
    $block.removeClass("chapter--open")
  },
  onChapterCloseClicked: function() {
    return this.closeProject($currentProject, !0), !1
  },
  init: function() {
    this.initPlugins(), this.initListener()
  }
}, Overlay.prototype = {
  constructor: Overlay,
  init: function() {
    this.initListener()
  },
  initListener: function() {
    jQuery("a[data-overlay]").on("click", this.onOverlayTrigger)
  },
  onOverlayTrigger: function() {
    return jQuery('a[data-overlay="' + jQuery(this).data("overlay") + '"]').toggleClass("overlay--triggered"), jQuery('.overlay[data-overlay="' + jQuery(this).data("overlay") + '"]').toggleClass("overlay--visible"), !1
  }
}, Fullpage.prototype = {
  constructor: Fullpage,
  initListener: function() {},
  init: function() {
    this.initListener()
  }
}, Chapter.prototype = {
  constructor: Chapter,
  initPlugins: function() {
    jQuery(".chapter").MDChapter()
  },
  init: function() {
    this.initPlugins()
  }
}, Main.prototype = {
  constructor: Main,
  initPlugins: function() {
    (new ViewportUnits).init(), (new Chapter).init(), (new BlockHero).init(), (new BlockWork).init(), (new Overlay).init(), jQuery('a[href^="#"]').on("click", this.onAnchorClicked)
  },
  onAnchorClicked: function() {
    var e = jQuery(this).attr("href").substr(1);
    if ("" != e) {
      var t = jQuery("[data-id=" + e + "]");
      if (t.length) {
        var o = 800;
        return jQuery("html,body").animate({
          scrollTop: t.offset().top
        }, o, "easeInOutQuart"), !1
      }
    }
  },
  initPreloading: function() {
    jQuery("body").waitForImages({
      finished: function() {
        jQuery("body").addClass("loaded"), jQuery(window).trigger("loaded")
      },
      waitForAll: !0
    })
  },
  trackPage: function(e) {
    console.info("track page", e), "undefined" != typeof window._gaq && window._gaq.push(["_trackPageview", e]), "undefined" != typeof window.ga && window.ga("send", "pageview", e)
  },
  init: function() {
    Main.initPlugins(), Main.initPreloading()
  }
};
var Main = new Main;
jQuery(Main.init);
